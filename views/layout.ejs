<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-slider.min.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/jquery.fullpage.min.css">
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="stylesheet" href="/styles/swiper.css">
    <link rel="stylesheet" href="/styles/swiper.min.css">
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->

    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/Chart.js"></script>
    <script src="/js/bootstrap-slider.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/clean-blog.min.js"></script>
    <script src="/js/fullpage/jquery.fullpage.js"></script>
    <script src="/js/qrcode.js"></script>
    <script src="/js/qrcode.min.js"></script>
    <script src="/js/swiper.jquery.js"></script>
    <script src="/js/test.js"></script>
    <script src="/js/typed.js"></script>
    <!--SCRIPTS END-->

    <script>
      $(document).ready(function () {
        //initialize swiper when document ready
        var mySwiper = new Swiper ('.swiper-container', {
          // Optional parameters
          direction: 'horizontal',
          loop: false,
          effect: 'slide',
          shortSwipes: false,
          allowSwipeToPrev: false,
        })

        var typetexts = {
          'app-1': {
            strings: ['<span class="typed-text spotygreen">Hello </span> <span id="typed-name">Peppa</span>  <br> <span class="typed-text">Your are about to <br> create a future <br> memory and become <br> part of a scientific <br> resarch on human <br> behaviours.</span>'],
            contentType: 'html',
            typeSpeed: 20,
            showCursor: false,
            callback: function () {
              $("#typed-name").typed({
                strings: ['Obama', 'Charlio', 'Juan de las nieves', 'Daenerys Targaryen', 'Darkness my old friend'],
                contentType: 'html',
                typeSpeed: 20,
                loop: true,
                showCursor: true,
                cursorChar: '_'
              });
            }
          },
          'app-2':{
            strings: ['<span id="message2">In order to create a <br> future memory you <br> need to know a bit <br> more about your <br> present self. <br><br> Today you will be able <br> to discover your own <br> musical habits and <br> personality traits.</span>'],
            contentType: 'html',
            typeSpeed: 20,
            showCursor: false,
            showCursor: true,
            startDelay: 1000,
            cursorChar: '_'
          }
        }

        mySwiper.on('onTransitionStart', function () {
          $(".swiper-slide.swiper-slide-next #message").typed('reset')
        });

        mySwiper.on('onTransitionStart', function () {
          var slide_href = $('.swiper-slide.swiper-slide-active').attr('href')
          $(".swiper-slide.swiper-slide-active #message").typed(
            typetexts[slide_href]
          );
        });
      });
    </script>
  </body>
</html>
